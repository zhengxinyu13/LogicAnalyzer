<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <title>Static Call Graph - [LogicAnalyzer\LogicAnalyzer.axf]</title>
</head>
<body>
  <hr />
  <h1>Static Call Graph for image LogicAnalyzer\LogicAnalyzer.axf</h1>
  <hr />
  <br />
  <p>#&#060;CALLGRAPH&#062;# ARM Linker, 5060960: Last Updated: Mon Oct 14 17:29:20 2024<br /></p>
  <p></p>
  <h3>Maximum Stack Usage = 136 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</h3>
  <h3>Call chain for Maximum Stack Depth:</h3>__rt_entry_main &rArr; main &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority
  <p></p>
  <h3>Functions with no stack information</h3>
  <ul>
    <li><a href="#[4c]">__user_initial_stackheap</a></li>
  </ul>
  <p></p>
  <h3>Mutually Recursive functions</h3>
  <li>
    <a href="#[1f]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">ADC1_2_IRQHandler</a><br />
    <ul>
      <li><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><br /></li>
      <li><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><br /></li>
      <li><a href="#[6]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemManage_Handler</a><br /></li>
      <li><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><br /></li>
      <li><a href="#[5c]">UART_EndRxTransfer</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5c]">UART_EndRxTransfer</a><br /></li>
      <li><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><br /></li>
    </ul>
    <p></p>
    <h3>Function Pointers</h3>
    <ul>
      <li><a href="#[1f]">ADC1_2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[7]">BusFault_Handler</a> from stm32f1xx_it.o(i.BusFault_Handler) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[22]">CAN1_RX1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[23]">CAN1_SCE_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[18]">DMA1_Channel1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[19]">DMA1_Channel2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[1a]">DMA1_Channel3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[1b]">DMA1_Channel4_IRQHandler</a> from stm32f1xx_it.o(i.DMA1_Channel4_IRQHandler) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[1c]">DMA1_Channel5_IRQHandler</a> from stm32f1xx_it.o(i.DMA1_Channel5_IRQHandler) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[1d]">DMA1_Channel6_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[1e]">DMA1_Channel7_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[a]">DebugMon_Handler</a> from stm32f1xx_it.o(i.DebugMon_Handler) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[13]">EXTI0_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[35]">EXTI15_10_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[14]">EXTI1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[15]">EXTI2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[16]">EXTI3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[17]">EXTI4_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[24]">EXTI9_5_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[11]">FLASH_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[5]">HardFault_Handler</a> from stm32f1xx_it.o(i.HardFault_Handler) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[2d]">I2C1_ER_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[2c]">I2C1_EV_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[2f]">I2C2_ER_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[2e]">I2C2_EV_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[6]">MemManage_Handler</a> from stm32f1xx_it.o(i.MemManage_Handler) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[4]">NMI_Handler</a> from stm32f1xx_it.o(i.NMI_Handler) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[e]">PVD_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[b]">PendSV_Handler</a> from stm32f1xx_it.o(i.PendSV_Handler) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[12]">RCC_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[36]">RTC_Alarm_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[10]">RTC_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[3]">Reset_Handler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[30]">SPI1_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[31]">SPI2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[9]">SVC_Handler</a> from stm32f1xx_it.o(i.SVC_Handler) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[c]">SysTick_Handler</a> from stm32f1xx_it.o(i.SysTick_Handler) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[38]">SystemInit</a> from system_stm32f1xx.o(i.SystemInit) referenced from startup_stm32f103xb.o(.text)</li>
      <li><a href="#[f]">TAMPER_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[25]">TIM1_BRK_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[28]">TIM1_CC_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[27]">TIM1_TRG_COM_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[26]">TIM1_UP_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[29]">TIM2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[2a]">TIM3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[2b]">TIM4_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[3a]">UART_DMAAbortOnError</a> from stm32f1xx_hal_uart.o(i.UART_DMAAbortOnError) referenced from stm32f1xx_hal_uart.o(i.HAL_UART_IRQHandler)</li>
      <li><a href="#[32]">USART1_IRQHandler</a> from stm32f1xx_it.o(i.USART1_IRQHandler) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[33]">USART2_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[34]">USART3_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[37]">USBWakeUp_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[20]">USB_HP_CAN1_TX_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[21]">USB_LP_CAN1_RX0_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[8]">UsageFault_Handler</a> from stm32f1xx_it.o(i.UsageFault_Handler) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[d]">WWDG_IRQHandler</a> from startup_stm32f103xb.o(.text) referenced from startup_stm32f103xb.o(RESET)</li>
      <li><a href="#[3b]">__main</a> from __main.o(!!!main) referenced from startup_stm32f103xb.o(.text)</li>
    </ul>
    <p></p>
    <h3>Global Symbols</h3>
    <p><strong><a name="[3b]" id="[3b]"></a>__main</strong> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload</li>
      <li><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry</li>
    </ul>
    <p><strong><a name="[3c]" id="[3c]"></a>__scatterload</strong> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main</li>
    </ul>
    <p><strong><a name="[3e]" id="[3e]"></a>__scatterload_rt2</strong> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry</li>
    </ul>
    <p><strong><a name="[73]" id="[73]"></a>__scatterload_rt2_thumb_only</strong> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)</p>
    <p><strong><a name="[74]" id="[74]"></a>__scatterload_null</strong> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)</p>
    <p><strong><a name="[3f]" id="[3f]"></a>__scatterload_copy</strong> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy</li>
    </ul>
    <p><strong><a name="[75]" id="[75]"></a>__scatterload_zeroinit</strong> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)</p>
    <p><strong><a name="[43]" id="[43]"></a>__rt_lib_init</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li</li>
    </ul>
    <p><strong><a name="[76]" id="[76]"></a>__rt_lib_init_alloca_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))</p>
    <p><strong><a name="[77]" id="[77]"></a>__rt_lib_init_argv_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))</p>
    <p><strong><a name="[78]" id="[78]"></a>__rt_lib_init_atexit_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))</p>
    <p><strong><a name="[79]" id="[79]"></a>__rt_lib_init_clock_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))</p>
    <p><strong><a name="[7a]" id="[7a]"></a>__rt_lib_init_cpp_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))</p>
    <p><strong><a name="[7b]" id="[7b]"></a>__rt_lib_init_exceptions_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))</p>
    <p><strong><a name="[7c]" id="[7c]"></a>__rt_lib_init_fp_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))</p>
    <p><strong><a name="[7d]" id="[7d]"></a>__rt_lib_init_fp_trap_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))</p>
    <p><strong><a name="[7e]" id="[7e]"></a>__rt_lib_init_getenv_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))</p>
    <p><strong><a name="[7f]" id="[7f]"></a>__rt_lib_init_heap_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))</p>
    <p><strong><a name="[80]" id="[80]"></a>__rt_lib_init_lc_collate_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))</p>
    <p><strong><a name="[81]" id="[81]"></a>__rt_lib_init_lc_ctype_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))</p>
    <p><strong><a name="[82]" id="[82]"></a>__rt_lib_init_lc_monetary_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))</p>
    <p><strong><a name="[83]" id="[83]"></a>__rt_lib_init_lc_numeric_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))</p>
    <p><strong><a name="[84]" id="[84]"></a>__rt_lib_init_lc_time_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))</p>
    <p><strong><a name="[85]" id="[85]"></a>__rt_lib_init_preinit_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))</p>
    <p><strong><a name="[86]" id="[86]"></a>__rt_lib_init_rand_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))</p>
    <p><strong><a name="[87]" id="[87]"></a>__rt_lib_init_return</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))</p>
    <p><strong><a name="[88]" id="[88]"></a>__rt_lib_init_signal_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))</p>
    <p><strong><a name="[89]" id="[89]"></a>__rt_lib_init_stdio_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))</p>
    <p><strong><a name="[8a]" id="[8a]"></a>__rt_lib_init_user_alloc_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))</p>
    <p><strong><a name="[48]" id="[48]"></a>__rt_lib_shutdown</strong> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls</li>
    </ul>
    <p><strong><a name="[8b]" id="[8b]"></a>__rt_lib_shutdown_cpp_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))</p>
    <p><strong><a name="[8c]" id="[8c]"></a>__rt_lib_shutdown_fini_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))</p>
    <p><strong><a name="[8d]" id="[8d]"></a>__rt_lib_shutdown_fp_trap_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))</p>
    <p><strong><a name="[8e]" id="[8e]"></a>__rt_lib_shutdown_heap_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000011))</p>
    <p><strong><a name="[8f]" id="[8f]"></a>__rt_lib_shutdown_return</strong> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000012))</p>
    <p><strong><a name="[90]" id="[90]"></a>__rt_lib_shutdown_signal_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))</p>
    <p><strong><a name="[91]" id="[91]"></a>__rt_lib_shutdown_stdio_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))</p>
    <p><strong><a name="[92]" id="[92]"></a>__rt_lib_shutdown_user_alloc_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))</p>
    <p><strong><a name="[3d]" id="[3d]"></a>__rt_entry</strong> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2</li>
      <li><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main</li>
    </ul>
    <p><strong><a name="[93]" id="[93]"></a>__rt_entry_presh_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))</p>
    <p><strong><a name="[40]" id="[40]"></a>__rt_entry_sh</strong> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 8 + Unknown Stack Size</li>
      <li>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap</li>
    </ul>
    <p><strong><a name="[42]" id="[42]"></a>__rt_entry_li</strong> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init</li>
    </ul>
    <p><strong><a name="[94]" id="[94]"></a>__rt_entry_postsh_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))</p>
    <p><strong><a name="[44]" id="[44]"></a>__rt_entry_main</strong> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 136 + Unknown Stack Size</li>
      <li>Call Chain = __rt_entry_main &rArr; main &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
      <li><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit</li>
    </ul>
    <p><strong><a name="[95]" id="[95]"></a>__rt_entry_postli_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))</p>
    <p><strong><a name="[4d]" id="[4d]"></a>__rt_exit</strong> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit</li>
    </ul>
    <p><strong><a name="[47]" id="[47]"></a>__rt_exit_ls</strong> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown</li>
    </ul>
    <p><strong><a name="[96]" id="[96]"></a>__rt_exit_prels_1</strong> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))</p>
    <p><strong><a name="[49]" id="[49]"></a>__rt_exit_exit</strong> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit</li>
    </ul>
    <p><strong><a name="[3]" id="[3]"></a>Reset_Handler</strong> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[1f]" id="[1f]"></a>ADC1_2_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler</li>
    </ul><br />
    [Address Reference Count : 1]
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[22]" id="[22]"></a>CAN1_RX1_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[23]" id="[23]"></a>CAN1_SCE_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[18]" id="[18]"></a>DMA1_Channel1_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[19]" id="[19]"></a>DMA1_Channel2_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[1a]" id="[1a]"></a>DMA1_Channel3_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[1d]" id="[1d]"></a>DMA1_Channel6_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[1e]" id="[1e]"></a>DMA1_Channel7_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[13]" id="[13]"></a>EXTI0_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[35]" id="[35]"></a>EXTI15_10_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[14]" id="[14]"></a>EXTI1_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[15]" id="[15]"></a>EXTI2_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[16]" id="[16]"></a>EXTI3_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[17]" id="[17]"></a>EXTI4_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[24]" id="[24]"></a>EXTI9_5_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[11]" id="[11]"></a>FLASH_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[2d]" id="[2d]"></a>I2C1_ER_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[2c]" id="[2c]"></a>I2C1_EV_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[2f]" id="[2f]"></a>I2C2_ER_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[2e]" id="[2e]"></a>I2C2_EV_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[e]" id="[e]"></a>PVD_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[12]" id="[12]"></a>RCC_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[36]" id="[36]"></a>RTC_Alarm_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[10]" id="[10]"></a>RTC_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[30]" id="[30]"></a>SPI1_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[31]" id="[31]"></a>SPI2_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[f]" id="[f]"></a>TAMPER_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[25]" id="[25]"></a>TIM1_BRK_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[28]" id="[28]"></a>TIM1_CC_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[27]" id="[27]"></a>TIM1_TRG_COM_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[26]" id="[26]"></a>TIM1_UP_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[29]" id="[29]"></a>TIM2_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[2a]" id="[2a]"></a>TIM3_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[2b]" id="[2b]"></a>TIM4_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[33]" id="[33]"></a>USART2_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[34]" id="[34]"></a>USART3_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[37]" id="[37]"></a>USBWakeUp_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[20]" id="[20]"></a>USB_HP_CAN1_TX_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[21]" id="[21]"></a>USB_LP_CAN1_RX0_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[d]" id="[d]"></a>WWDG_IRQHandler</strong> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f103xb.o(.text))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[4c]" id="[4c]"></a>__user_initial_stackheap</strong> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f103xb.o(.text))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap</li>
    </ul>
    <p><strong><a name="[6f]" id="[6f]"></a>__aeabi_memclr4</strong> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 4</li>
      <li>Call Chain = __aeabi_memclr4</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config</li>
    </ul>
    <p><strong><a name="[97]" id="[97]"></a>__aeabi_memclr8</strong> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)</p>
    <p><strong><a name="[98]" id="[98]"></a>__rt_memclr_w</strong> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)</p>
    <p><strong><a name="[99]" id="[99]"></a>_memset_w</strong> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)</p>
    <p><strong><a name="[9a]" id="[9a]"></a>__use_two_region_memory</strong> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)</p>
    <p><strong><a name="[9b]" id="[9b]"></a>__rt_heap_escrow$2region</strong> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)</p>
    <p><strong><a name="[9c]" id="[9c]"></a>__rt_heap_expand$2region</strong> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)</p>
    <p><strong><a name="[41]" id="[41]"></a>__user_setup_stackheap</strong> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 8 + Unknown Stack Size</li>
      <li>Call Chain = __user_setup_stackheap</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap</li>
      <li><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh</li>
    </ul>
    <p><strong><a name="[46]" id="[46]"></a>exit</strong> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 8 + Unknown Stack Size</li>
      <li>Call Chain = exit</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main</li>
    </ul>
    <p><strong><a name="[9d]" id="[9d]"></a>__user_libspace</strong> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)</p>
    <p><strong><a name="[4b]" id="[4b]"></a>__user_perproc_libspace</strong> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap</li>
    </ul>
    <p><strong><a name="[9e]" id="[9e]"></a>__user_perthread_libspace</strong> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)</p>
    <p><strong><a name="[4a]" id="[4a]"></a>_sys_exit</strong> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit</li>
    </ul>
    <p><strong><a name="[9f]" id="[9f]"></a>__I$use$semihosting</strong> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)</p>
    <p><strong><a name="[a0]" id="[a0]"></a>__use_no_semihosting_swi</strong> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)</p>
    <p><strong><a name="[7]" id="[7]"></a>BusFault_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.BusFault_Handler))<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler</li>
    </ul><br />
    [Address Reference Count : 1]
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[a1]" id="[a1]"></a>__semihosting_library_function</strong> (Thumb, 0 bytes, Stack size 0 bytes, indicate_semi.o(.text), UNUSED)</p>
    <p><strong><a name="[1b]" id="[1b]"></a>DMA1_Channel4_IRQHandler</strong> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.DMA1_Channel4_IRQHandler))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 40</li>
      <li>Call Chain = DMA1_Channel4_IRQHandler &rArr; HAL_DMA_IRQHandler</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler</li>
    </ul><br />
    [Address Reference Count : 1]
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[1c]" id="[1c]"></a>DMA1_Channel5_IRQHandler</strong> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.DMA1_Channel5_IRQHandler))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 40</li>
      <li>Call Chain = DMA1_Channel5_IRQHandler &rArr; HAL_DMA_IRQHandler</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_IRQHandler</li>
    </ul><br />
    [Address Reference Count : 1]
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[a]" id="[a]"></a>DebugMon_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.DebugMon_Handler))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[67]" id="[67]"></a>Error_Handler</strong> (Thumb, 4 bytes, Stack size 0 bytes, main.o(i.Error_Handler))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit</li>
      <li><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init</li>
    </ul>
    <p><strong><a name="[5f]" id="[5f]"></a>HAL_DMA_Abort</strong> (Thumb, 70 bytes, Stack size 8 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_Abort))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 8</li>
      <li>Call Chain = HAL_DMA_Abort</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler</li>
    </ul>
    <p><strong><a name="[5d]" id="[5d]"></a>HAL_DMA_Abort_IT</strong> (Thumb, 148 bytes, Stack size 8 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_Abort_IT))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 8</li>
      <li>Call Chain = HAL_DMA_Abort_IT</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler</li>
    </ul>
    <p><strong><a name="[4e]" id="[4e]"></a>HAL_DMA_IRQHandler</strong> (Thumb, 316 bytes, Stack size 40 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_IRQHandler))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 40</li>
      <li>Call Chain = HAL_DMA_IRQHandler</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel5_IRQHandler</li>
      <li><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA1_Channel4_IRQHandler</li>
    </ul>
    <p><strong><a name="[66]" id="[66]"></a>HAL_DMA_Init</strong> (Thumb, 84 bytes, Stack size 12 bytes, stm32f1xx_hal_dma.o(i.HAL_DMA_Init))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 12</li>
      <li>Call Chain = HAL_DMA_Init</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit</li>
    </ul>
    <p><strong><a name="[65]" id="[65]"></a>HAL_GPIO_Init</strong> (Thumb, 446 bytes, Stack size 40 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_Init))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 40</li>
      <li>Call Chain = HAL_GPIO_Init</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit</li>
      <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init</li>
    </ul>
    <p><strong><a name="[6b]" id="[6b]"></a>HAL_GPIO_WritePin</strong> (Thumb, 10 bytes, Stack size 0 bytes, stm32f1xx_hal_gpio.o(i.HAL_GPIO_WritePin))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init</li>
    </ul>
    <p><strong><a name="[57]" id="[57]"></a>HAL_GetTick</strong> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_GetTick))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig</li>
      <li><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig</li>
    </ul>
    <p><strong><a name="[6d]" id="[6d]"></a>HAL_IncTick</strong> (Thumb, 12 bytes, Stack size 0 bytes, stm32f1xx_hal.o(i.HAL_IncTick))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler</li>
    </ul>
    <p><strong><a name="[4f]" id="[4f]"></a>HAL_Init</strong> (Thumb, 32 bytes, Stack size 8 bytes, stm32f1xx_hal.o(i.HAL_Init))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 40</li>
      <li>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit</li>
      <li><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick</li>
      <li><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
    </ul>
    <p><strong><a name="[51]" id="[51]"></a>HAL_InitTick</strong> (Thumb, 54 bytes, Stack size 16 bytes, stm32f1xx_hal.o(i.HAL_InitTick))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 32</li>
      <li>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority</li>
      <li><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig</li>
      <li><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init</li>
    </ul>
    <p><strong><a name="[52]" id="[52]"></a>HAL_MspInit</strong> (Thumb, 52 bytes, Stack size 8 bytes, stm32f1xx_hal_msp.o(i.HAL_MspInit))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 8</li>
      <li>Call Chain = HAL_MspInit</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init</li>
    </ul>
    <p><strong><a name="[68]" id="[68]"></a>HAL_NVIC_EnableIRQ</strong> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit</li>
      <li><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init</li>
    </ul>
    <p><strong><a name="[54]" id="[54]"></a>HAL_NVIC_SetPriority</strong> (Thumb, 60 bytes, Stack size 16 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriority))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 16</li>
      <li>Call Chain = HAL_NVIC_SetPriority</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit</li>
      <li><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init</li>
      <li><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick</li>
    </ul>
    <p><strong><a name="[50]" id="[50]"></a>HAL_NVIC_SetPriorityGrouping</strong> (Thumb, 26 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init</li>
    </ul>
    <p><strong><a name="[56]" id="[56]"></a>HAL_RCC_ClockConfig</strong> (Thumb, 280 bytes, Stack size 32 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_ClockConfig))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 64</li>
      <li>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq</li>
      <li><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick</li>
      <li><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config</li>
    </ul>
    <p><strong><a name="[72]" id="[72]"></a>HAL_RCC_GetPCLK1Freq</strong> (Thumb, 20 bytes, Stack size 0 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetPCLK1Freq))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig</li>
    </ul>
    <p><strong><a name="[71]" id="[71]"></a>HAL_RCC_GetPCLK2Freq</strong> (Thumb, 20 bytes, Stack size 0 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetPCLK2Freq))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig</li>
    </ul>
    <p><strong><a name="[58]" id="[58]"></a>HAL_RCC_GetSysClockFreq</strong> (Thumb, 58 bytes, Stack size 0 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig</li>
    </ul>
    <p><strong><a name="[59]" id="[59]"></a>HAL_RCC_OscConfig</strong> (Thumb, 778 bytes, Stack size 40 bytes, stm32f1xx_hal_rcc.o(i.HAL_RCC_OscConfig))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 40</li>
      <li>Call Chain = HAL_RCC_OscConfig</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config</li>
    </ul>
    <p><strong><a name="[53]" id="[53]"></a>HAL_SYSTICK_Config</strong> (Thumb, 40 bytes, Stack size 8 bytes, stm32f1xx_hal_cortex.o(i.HAL_SYSTICK_Config))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 8</li>
      <li>Call Chain = HAL_SYSTICK_Config</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_SetPriority</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick</li>
    </ul>
    <p><strong><a name="[60]" id="[60]"></a>HAL_UARTEx_RxEventCallback</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.HAL_UARTEx_RxEventCallback))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT</li>
      <li><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler</li>
    </ul>
    <p><strong><a name="[5e]" id="[5e]"></a>HAL_UART_ErrorCallback</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_ErrorCallback))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_DMAAbortOnError</li>
      <li><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler</li>
    </ul>
    <p><strong><a name="[5a]" id="[5a]"></a>HAL_UART_IRQHandler</strong> (Thumb, 616 bytes, Stack size 24 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_IRQHandler))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 32</li>
      <li>Call Chain = HAL_UART_IRQHandler &rArr; UART_Receive_IT</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT</li>
      <li><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer</li>
      <li><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_TxCpltCallback</li>
      <li><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback</li>
      <li><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback</li>
      <li><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort_IT</li>
      <li><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler</li>
    </ul>
    <p><strong><a name="[62]" id="[62]"></a>HAL_UART_Init</strong> (Thumb, 100 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_Init))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 96</li>
      <li>Call Chain = HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SetConfig</li>
      <li><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_MspInit</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init</li>
    </ul>
    <p><strong><a name="[63]" id="[63]"></a>HAL_UART_MspInit</strong> (Thumb, 198 bytes, Stack size 40 bytes, usart.o(i.HAL_UART_MspInit))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 80</li>
      <li>Call Chain = HAL_UART_MspInit &rArr; HAL_GPIO_Init</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init</li>
      <li><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority</li>
      <li><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ</li>
      <li><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init</li>
      <li><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init</li>
    </ul>
    <p><strong><a name="[70]" id="[70]"></a>HAL_UART_RxCpltCallback</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_RxCpltCallback))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Receive_IT</li>
    </ul>
    <p><strong><a name="[61]" id="[61]"></a>HAL_UART_TxCpltCallback</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.HAL_UART_TxCpltCallback))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler</li>
    </ul>
    <p><strong><a name="[5]" id="[5]"></a>HardFault_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.HardFault_Handler))<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler</li>
    </ul><br />
    [Address Reference Count : 1]
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[69]" id="[69]"></a>MX_DMA_Init</strong> (Thumb, 56 bytes, Stack size 8 bytes, dma.o(i.MX_DMA_Init))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 24</li>
      <li>Call Chain = MX_DMA_Init &rArr; HAL_NVIC_SetPriority</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority</li>
      <li><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
    </ul>
    <p><strong><a name="[6a]" id="[6a]"></a>MX_GPIO_Init</strong> (Thumb, 138 bytes, Stack size 40 bytes, gpio.o(i.MX_GPIO_Init))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 80</li>
      <li>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin</li>
      <li><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
    </ul>
    <p><strong><a name="[6c]" id="[6c]"></a>MX_USART1_UART_Init</strong> (Thumb, 48 bytes, Stack size 8 bytes, usart.o(i.MX_USART1_UART_Init))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 104</li>
      <li>Call Chain = MX_USART1_UART_Init &rArr; HAL_UART_Init &rArr; HAL_UART_MspInit &rArr; HAL_GPIO_Init</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init</li>
      <li><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
    </ul>
    <p><strong><a name="[6]" id="[6]"></a>MemManage_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.MemManage_Handler))<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler</li>
    </ul><br />
    [Address Reference Count : 1]
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[4]" id="[4]"></a>NMI_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.NMI_Handler))<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler</li>
    </ul><br />
    [Address Reference Count : 1]
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[b]" id="[b]"></a>PendSV_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.PendSV_Handler))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[9]" id="[9]"></a>SVC_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SVC_Handler))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[c]" id="[c]"></a>SysTick_Handler</strong> (Thumb, 4 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.SysTick_Handler))<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick</li>
    </ul><br />
    [Address Reference Count : 1]
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[6e]" id="[6e]"></a>SystemClock_Config</strong> (Thumb, 94 bytes, Stack size 72 bytes, main.o(i.SystemClock_Config))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 136</li>
      <li>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig</li>
      <li><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig</li>
      <li><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main</li>
    </ul>
    <p><strong><a name="[38]" id="[38]"></a>SystemInit</strong> (Thumb, 2 bytes, Stack size 0 bytes, system_stm32f1xx.o(i.SystemInit))<br />
    [Address Reference Count : 1]</p>
    <ul>
      <li>startup_stm32f103xb.o(.text)</li>
    </ul>
    <p><strong><a name="[32]" id="[32]"></a>USART1_IRQHandler</strong> (Thumb, 6 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.USART1_IRQHandler))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 32</li>
      <li>Call Chain = USART1_IRQHandler &rArr; HAL_UART_IRQHandler &rArr; UART_Receive_IT</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler</li>
    </ul><br />
    [Address Reference Count : 1]
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[8]" id="[8]"></a>UsageFault_Handler</strong> (Thumb, 2 bytes, Stack size 0 bytes, stm32f1xx_it.o(i.UsageFault_Handler))<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler</li>
    </ul><br />
    [Address Reference Count : 1]
    <ul>
      <li>startup_stm32f103xb.o(RESET)</li>
    </ul>
    <p><strong><a name="[45]" id="[45]"></a>main</strong> (Thumb, 22 bytes, Stack size 0 bytes, main.o(i.main))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 136</li>
      <li>Call Chain = main &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init</li>
      <li><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init</li>
      <li><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_DMA_Init</li>
      <li><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init</li>
      <li><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main</li>
    </ul>
    <p></p>
    <h3>Local Symbols</h3>
    <p><strong><a name="[3a]" id="[3a]"></a>UART_DMAAbortOnError</strong> (Thumb, 16 bytes, Stack size 8 bytes, stm32f1xx_hal_uart.o(i.UART_DMAAbortOnError))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 8</li>
      <li>Call Chain = UART_DMAAbortOnError</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_ErrorCallback</li>
    </ul><br />
    [Address Reference Count : 1]
    <ul>
      <li>stm32f1xx_hal_uart.o(i.HAL_UART_IRQHandler)</li>
    </ul>
    <p><strong><a name="[5c]" id="[5c]"></a>UART_EndRxTransfer</strong> (Thumb, 78 bytes, Stack size 0 bytes, stm32f1xx_hal_uart.o(i.UART_EndRxTransfer))<br />
    <br />
    [Calls]</p>
    <ul>
      <li><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_EndRxTransfer</li>
      <li><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler</li>
    </ul>
    <p><strong><a name="[5b]" id="[5b]"></a>UART_Receive_IT</strong> (Thumb, 194 bytes, Stack size 8 bytes, stm32f1xx_hal_uart.o(i.UART_Receive_IT))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 8</li>
      <li>Call Chain = UART_Receive_IT</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_RxCpltCallback</li>
      <li><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UARTEx_RxEventCallback</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_IRQHandler</li>
    </ul>
    <p><strong><a name="[64]" id="[64]"></a>UART_SetConfig</strong> (Thumb, 178 bytes, Stack size 16 bytes, stm32f1xx_hal_uart.o(i.UART_SetConfig))<br />
    <br />
    [Stack]</p>
    <ul>
      <li>Max Depth = 16</li>
      <li>Call Chain = UART_SetConfig</li>
    </ul><br />
    [Calls]
    <ul>
      <li><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq</li>
      <li><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq</li>
    </ul><br />
    [Called By]
    <ul>
      <li><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_UART_Init</li>
    </ul>
    <p><strong><a name="[55]" id="[55]"></a>__NVIC_SetPriority</strong> (Thumb, 32 bytes, Stack size 0 bytes, stm32f1xx_hal_cortex.o(i.__NVIC_SetPriority))<br />
    <br />
    [Called By]</p>
    <ul>
      <li><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority</li>
      <li><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config</li>
    </ul>
    <p></p>
    <h3>Undefined Global Symbols</h3>
    <hr />
  </li>
</body>
</html>
